module.exports = async (context, app, param ,setup)=>{
    let aktools = require('../utils/aktools');
    let aktoolsInstance = new aktools(context,app);
    if(param.type=='hist_lastday_update'){
        //从表hist_daily中更新最后一天股票信息到hist_lastday表中
        await aktoolsInstance.hist_lastday_update();
        return context.toHTML(true);
    }
    if(param.type=='screen'){
        return context.toJSON([
            "000002",
            "000009",
            "000010",
            "000019",
            "000031",
            "000035",
            "000042",
            "000050",
            "000055",
            "000059",
            "000069",
            "000070",
            "000078",
            "000090",
            "000153",
            "000301",
            "000401",
            "000402",
            "000428",
            "000488",
            "000505",
            "000506",
            "000510",
            "000516",
            "000530",
            "000531",
            "000537",
            "000539",
            "000541",
            "000545",
            "000546",
            "000547",
            "000552",
            "000553",
            "000573",
            "000576",
            "000584",
            "000589",
            "000590",
            "000591",
            "000593",
            "000609",
            "000622",
            "000629",
            "000631",
            "000633",
            "000635",
            "000638",
            "000639",
            "000650",
            "000655",
            "000663",
            "000668",
            "000672",
            "000683",
            "000691",
            "000698",
            "000700",
            "000701",
            "000703",
            "000705",
            "000710",
            "000713",
            "000715",
            "000720",
            "000723",
            "000757",
            "000761",
            "000767",
            "000779",
            "000785",
            "000788",
            "000789",
            "000790",
            "000798",
            "000800",
            "000803",
            "000809",
            "000813",
            "000825",
            "000826",
            "000838",
            "000851",
            "000852",
            "000856",
            "000862",
            "000876",
            "000877",
            "000890",
            "000905",
            "000911",
            "000919",
            "000929",
            "000930",
            "000931",
            "000932",
            "000936",
            "000952",
            "000959",
            "000968",
            "000972",
            "000978",
            "000980",
            "000989",
            "001203",
            "001227",
            "001258",
            "001313",
            "001322",
            "001330",
            "001896",
            "002015",
            "002022",
            "002030",
            "002038",
            "002044",
            "002054",
            "002055",
            "002057",
            "002060",
            "002068",
            "002072",
            "002084",
            "002090",
            "002092",
            "002099",
            "002100",
            "002104",
            "002105",
            "002107",
            "002108",
            "002109",
            "002110",
            "002115",
            "002120",
            "002121",
            "002122",
            "002124",
            "002133",
            "002135",
            "002153",
            "002154",
            "002162",
            "002168",
            "002172",
            "002176",
            "002187",
            "002188",
            "002191",
            "002196",
            "002197",
            "002200",
            "002201",
            "002203",
            "002205",
            "002206",
            "002207",
            "002212",
            "002217",
            "002218",
            "002219",
            "002221",
            "002224",
            "002235",
            "002250",
            "002251",
            "002258",
            "002259",
            "002266",
            "002276",
            "002277",
            "002284",
            "002286",
            "002289",
            "002291",
            "002293",
            "002298",
            "002300",
            "002307",
            "002309",
            "002310",
            "002314",
            "002316",
            "002329",
            "002330",
            "002333",
            "002334",
            "002336",
            "002337",
            "002342",
            "002345",
            "002349",
            "002356",
            "002360",
            "002363",
            "002364",
            "002365",
            "002367",
            "002370",
            "002374",
            "002375",
            "002376",
            "002381",
            "002382",
            "002385",
            "002386",
            "002388",
            "002390",
            "002391",
            "002394",
            "002397",
            "002408",
            "002412",
            "002413",
            "002420",
            "002424",
            "002425",
            "002427",
            "002429",
            "002434",
            "002437",
            "002441",
            "002443",
            "002446",
            "002453",
            "002454",
            "002485",
            "002490",
            "002491",
            "002492",
            "002493",
            "002494",
            "002498",
            "002511",
            "002513",
            "002514",
            "002522",
            "002524",
            "002528",
            "002529",
            "002531",
            "002535",
            "002546",
            "002548",
            "002549",
            "002551",
            "002554",
            "002560",
            "002566",
            "002567",
            "002571",
            "002573",
            "002574",
            "002578",
            "002585",
            "002586",
            "002589",
            "002591",
            "002592",
            "002602",
            "002609",
            "002616",
            "002620",
            "002629",
            "002631",
            "002634",
            "002636",
            "002639",
            "002642",
            "002644",
            "002645",
            "002658",
            "002666",
            "002671",
            "002672",
            "002677",
            "002679",
            "002682",
            "002687",
            "002688",
            "002694",
            "002695",
            "002696",
            "002702",
            "002706",
            "002713",
            "002719",
            "002721",
            "002723",
            "002724",
            "002726",
            "002728",
            "002730",
            "002731",
            "002746",
            "002748",
            "002750",
            "002753",
            "002758",
            "002762",
            "002763",
            "002769",
            "002772",
            "002775",
            "002783",
            "002788",
            "002790",
            "002793",
            "002795",
            "002798",
            "002799",
            "002808",
            "002809",
            "002817",
            "002828",
            "002842",
            "002846",
            "002852",
            "002863",
            "002872",
            "002877",
            "002887",
            "002905",
            "002908",
            "002909",
            "002910",
            "002918",
            "002950",
            "002951",
            "002953",
            "002969",
            "002996",
            "002998",
            "002999",
            "003012",
            "003018",
            "003035",
            "003037",
            "300009",
            "300016",
            "300020",
            "300021",
            "300026",
            "300029",
            "300030",
            "300032",
            "300039",
            "300041",
            "300051",
            "300055",
            "300057",
            "300062",
            "300065",
            "300066",
            "300078",
            "300084",
            "300086",
            "300095",
            "300096",
            "300097",
            "300110",
            "300123",
            "300125",
            "300126",
            "300129",
            "300137",
            "300138",
            "300140",
            "300144",
            "300149",
            "300158",
            "300163",
            "300164",
            "300165",
            "300167",
            "300172",
            "300190",
            "300204",
            "300205",
            "300208",
            "300211",
            "300214",
            "300225",
            "300239",
            "300246",
            "300252",
            "300254",
            "300257",
            "300265",
            "300268",
            "300271",
            "300289",
            "300296",
            "300300",
            "300305",
            "300313",
            "300317",
            "300323",
            "300329",
            "300332",
            "300334",
            "300344",
            "300345",
            "300358",
            "300365",
            "300368",
            "300369",
            "300375",
            "300376",
            "300381",
            "300385",
            "300393",
            "300405",
            "300410",
            "300412",
            "300414",
            "300419",
            "300422",
            "300423",
            "300434",
            "300451",
            "300472",
            "300477",
            "300485",
            "300490",
            "300506",
            "300510",
            "300511",
            "300517",
            "300536",
            "300569",
            "300575",
            "300587",
            "300591",
            "300600",
            "300630",
            "300636",
            "300639",
            "300658",
            "300665",
            "300670",
            "300686",
            "300700",
            "300715",
            "300732",
            "300737",
            "300749",
            "300774",
            "300798",
            "300839",
            "300883",
            "300887",
            "300891",
            "300903",
            "300931",
            "300933",
            "300942",
            "301009",
            "301056",
            "301081",
            "301090",
            "301098",
            "301265",
            "600004",
            "600011",
            "600032",
            "600058",
            "600059",
            "600063",
            "600075",
            "600078",
            "600080",
            "600082",
            "600083",
            "600084",
            "600095",
            "600100",
            "600110",
            "600115",
            "600116",
            "600117",
            "600127",
            "600136",
            "600149",
            "600152",
            "600155",
            "600159",
            "600165",
            "600166",
            "600173",
            "600180",
            "600186",
            "600189",
            "600193",
            "600195",
            "600201",
            "600202",
            "600215",
            "600222",
            "600223",
            "600226",
            "600231",
            "600234",
            "600251",
            "600257",
            "600267",
            "600281",
            "600287",
            "600303",
            "600305",
            "600313",
            "600322",
            "600325",
            "600330",
            "600335",
            "600337",
            "600351",
            "600358",
            "600359",
            "600360",
            "600361",
            "600365",
            "600370",
            "600371",
            "600376",
            "600381",
            "600387",
            "600395",
            "600397",
            "600398",
            "600399",
            "600403",
            "600405",
            "600408",
            "600423",
            "600429",
            "600448",
            "600477",
            "600478",
            "600481",
            "600488",
            "600491",
            "600493",
            "600499",
            "600500",
            "600507",
            "600510",
            "600516",
            "600533",
            "600537",
            "600540",
            "600561",
            "600569",
            "600572",
            "600581",
            "600583",
            "600586",
            "600590",
            "600594",
            "600595",
            "600596",
            "600597",
            "600606",
            "600608",
            "600610",
            "600613",
            "600616",
            "600620",
            "600665",
            "600671",
            "600675",
            "600681",
            "600682",
            "600683",
            "600691",
            "600720",
            "600721",
            "600728",
            "600735",
            "600740",
            "600746",
            "600753",
            "600758",
            "600774",
            "600777",
            "600778",
            "600780",
            "600792",
            "600798",
            "600802",
            "600804",
            "600812",
            "600821",
            "600829",
            "600831",
            "600841",
            "600846",
            "600851",
            "600853",
            "600857",
            "600858",
            "600867",
            "600883",
            "600884",
            "600903",
            "600905",
            "600916",
            "600917",
            "600918",
            "600929",
            "600935",
            "600936",
            "600956",
            "600960",
            "600963",
            "600965",
            "600966",
            "600967",
            "600973",
            "600975",
            "600984",
            "600987",
            "601003",
            "601007",
            "601011",
            "601015",
            "601022",
            "601065",
            "601121",
            "601158",
            "601208",
            "601218",
            "601238",
            "601279",
            "601368",
            "601566",
            "601568",
            "601609",
            "601619",
            "601636",
            "601678",
            "601686",
            "601778",
            "601828",
            "601886",
            "601890",
            "601908",
            "601956",
            "603003",
            "603017",
            "603020",
            "603022",
            "603023",
            "603028",
            "603060",
            "603065",
            "603077",
            "603086",
            "603089",
            "603105",
            "603113",
            "603118",
            "603122",
            "603123",
            "603126",
            "603128",
            "603158",
            "603162",
            "603168",
            "603176",
            "603177",
            "603183",
            "603213",
            "603222",
            "603223",
            "603226",
            "603229",
            "603313",
            "603316",
            "603321",
            "603326",
            "603330",
            "603333",
            "603335",
            "603359",
            "603363",
            "603377",
            "603378",
            "603385",
            "603387",
            "603388",
            "603421",
            "603458",
            "603500",
            "603506",
            "603518",
            "603569",
            "603577",
            "603588",
            "603601",
            "603608",
            "603609",
            "603616",
            "603617",
            "603618",
            "603633",
            "603637",
            "603682",
            "603687",
            "603696",
            "603716",
            "603718",
            "603730",
            "603758",
            "603759",
            "603778",
            "603797",
            "603808",
            "603811",
            "603815",
            "603818",
            "603828",
            "603838",
            "603839",
            "603843",
            "603861",
            "603866",
            "603869",
            "603876",
            "603878",
            "603879",
            "603898",
            "603901",
            "603903",
            "603909",
            "603912",
            "603916",
            "603926",
            "603936",
            "603937",
            "603956",
            "603959",
            "603963",
            "603982",
            "603987",
            "605018",
            "605055",
            "605066",
            "605069",
            "605136",
            "605138",
            "605162",
            "605188",
            "605208",
            "605268",
            "605299",
            "605303",
            "605366",
            "605388",
            "605500",
            "605567",
            "688033",
            "688079",
            "688096",
            "688098",
            "688119",
            "688148",
            "688176",
            "688189",
            "688219",
            "688221",
            "688223",
            "688238",
            "688280",
            "688285",
            "688287",
            "688365",
            "688373",
            "688387",
            "688403",
            "688468",
            "688488",
            "688496",
            "688505",
            "688538",
            "688565",
            "688571",
            "688585",
            "688602",
            "688619",
            "688659",
            "688701",
            "688779"
          ]);
        let _ = app.lib.lodash();
        let DB = await aktoolsInstance.db();
        let CodeName = DB.tables.stock_info_a_code_name.getAll();
        let screenRst = [];
        for(let i=0;i<CodeName.length;i++){
            let lastDayInfo = DB.tables.hist_daily.get({code:CodeName[i].code})[0];
            let dataJSON = JSON.parse(lastDayInfo.hist_daily);
            let findItem = dataJSON.filter(item=>{
                //选出2023/10/1号有数据的股票
                return new Date(item['日期']).toLocaleDateString()==='2023/10/31';
            })
            if(findItem.length>0){
                //选出今天股价在2到10元内的股票
                if(2<dataJSON.slice(-1)[0]['收盘']&&dataJSON.slice(-1)[0]['收盘']<10){
                    //并且今天的收盘价小于findItem的收盘价
                    if(dataJSON.slice(-1)[0]['收盘']<findItem[0]['收盘']){
                        screenRst.push(findItem[0]['股票代码']);
                    }
                }
                // console.log(findItem);
            }
            // console.log(lastDayInfo);
        }
        return context.toJSON(screenRst);
    }
    if(param.type == 'btn_hist_daily_update'){
        //更新 hist_daily表
        try{
            await aktoolsInstance.update_stock_hist();
            return context.toJSON(true);
        }catch(e){
            console.log(e);
            return context.toJSON(false);
        }
    }
    if(param.type == 'btn_hist_lastday_get'){
        //获取所有股票的最后一天的数据
        let DB = await aktoolsInstance.db();
        let CodeName = DB.tables.stock_info_a_code_name.getAll();
        for(let i=0;i<CodeName.length;i++){
            let lastDayInfo = DB.tables.hist_lastday.get({code:CodeName[i].code})[0];
            CodeName[i] = Object.assign(CodeName[i],lastDayInfo);
        }
        return context.toJSON(CodeName);
    }
    if(param.type == 'stock_zh_a_spot_em'){
        let data = await aktoolsInstance.stock_zh_a_spot_em();
        return context.toJSON(data);
    }
    // 历史行情数据
    // let data = await aktoolsInstance.get('stock_zh_a_hist',{symbol:'603035',period:"daily"});
    // 历史行情数据-腾讯，可获取到ETF
    // let data = await aktoolsInstance.get('stock_zh_a_hist_tx',{symbol:'sh511360',start_date:"20231116",end_date:"20241116"});
    // if(data.status === 200){

    //     // let Mon = '';
    //     // let allCount = [];//存储每个星期的周一和周二的数据
    //     // for(let item of data.data){
    //     //     if(new Date(item.date).getDay()===1){
    //     //         Mon = item;
    //     //         Mon.week = '星期一';
    //     //     }else if(new Date(item.date).getDay()===5){
    //     //         if(Mon !== ''){
    //     //             item.week = '星期二';
    //     //             allCount.push({Mon:Mon,Tues:item});
    //     //         }
    //     //     }
    //     // }
    //     // //统计周二开盘大于周一开盘的概率
    //     // let isInCount = 0;
    //     // let zongShouyi = 0;
    //     // for(let item of allCount){
    //     //     if(item.Tues.open>=item.Mon.close){
    //     //        // console.log(item.Tues.open-item.Mon.close);
    //     //         isInCount ++;
    //     //         zongShouyi += item.Tues.open-item.Mon.close;
    //     //     }else{
    //     //         let num = item.Tues.open-item.Mon.close;
    //     //         zongShouyi += item.Tues.open - item.Mon.close;
    //     //         //if(num<=-1){
    //     //             //console.log(num)
    //     //             if(item.Tues.close - item.Mon.close>=0){
    //     //                 //等到第二天收盘再卖
    //     //                 //isInCount++
    //     //                 console.log(item.Tues);

    //     //                 //zongShouyi += item.Tues.close - item.Mon.close;
    //     //             }else{
    //     //                 //zongShouyi += item.Tues.close - item.Mon.close;
    //     //             };
    //     //             //console.log(item.Tues.close - item.Mon.close);
    //     //         //}
    //     //     }
    //     // }
    //     // console.log('胜率',isInCount/allCount.length,'总收益',zongShouyi,'开始日期',data.data[0].date);



    //     let Mon=0,Tues=0,Wed=0,Thurs=0,Fri=0,dateCount=0,shouyi=0;
    //     for(let index in data.data){
    //         let day = new Date(data.data[index].date).getDay();
    //         if(day===1){
    //             Mon += data.data[index].close - data.data[index].open;
    //         }
    //         if(day===2){
    //             Tues += data.data[index].close - data.data[index].open;
    //         }
    //         if(day===3){
    //             Wed += data.data[index].close - data.data[index].open;
    //         }
    //         if(day===4){
    //             Thurs += data.data[index].close - data.data[index].open;
    //         }
    //         if(day===5){
    //             Fri += data.data[index].close - data.data[index].open;
    //         }
    //         if(data.data[index].close - data.data[index].open>0){
                
                
    //         }
    //         dateCount++;
    //         if(data.data[index-0+1]){
    //             shouyi = shouyi+(data.data[index-0+1].open - data.data[index].close);
    //             console.log(data.data[index-0+1].open - data.data[index].close);
    //         }else{
    //             console.log(data.data[index-0+1]);
    //         }



    //     }
    //     console.log(Mon,Tues,Wed,Thurs,Fri,dateCount,shouyi,shouyi/dateCount);
    //     return context.toJSON('111');
    // }else{
    //     return context.toHTML('没有查询到相关数据')
    // }


    // //更新基础数据
    // let data = await aktoolsInstance.stock_info_a_code_name();
    // var codeArr = [];
    // data.forEach(item=>{
    //     if(!codeArr.some((itemeach)=>{return itemeach === item.code.toString().substring(0,3)})){
    //         codeArr.push(item.code.toString().substring(0,3));
    //     }
    // });
    // console.log(codeArr);

    let data = await aktoolsInstance.stock_zh_a_hist('000001',true);

    // let datas = await aktoolsInstance.stock_info_bj_name_code();
    console.log(data);
    return context.toJSON(data);
}