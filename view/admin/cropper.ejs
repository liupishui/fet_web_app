
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>图片裁剪</title>
    <link rel="stylesheet" href="static/css/plugins/cropper/cropper.min.css">
    <link href="static/css/bootstrap.min14ed.css?v=3.3.6" rel="stylesheet">
    <link rel="stylesheet" href="static/default.css">
    <link rel="stylesheet" href="https://cdn.staticfile.org/font-awesome/5.15.3/css/all.css">
    <style type="text/css">
        .img-preview {
        float: left;
        margin-bottom: 0.5rem;
        margin-right: 0.5rem;
        overflow: hidden;
        }

        .img-preview > img {
        max-width: 100%;
        }

        .preview-lg {
        height: 9rem;
        width: 16rem;
        }

        .preview-md {
        height: 4.5rem;
        width: 8rem;
        }

        .preview-sm {
        height: 2.25rem;
        width: 4rem;
        }

        .preview-xs {
        height: 1.125rem;
        margin-right: 0;
        width: 2rem;
        }
    </style>
</head>
<body>
    <div class="container pt-10">
        <div class="row">
            <div class="col col-sm-8" style="height:405px;padding:0">
                <img id="image" style="max-width:100%" src="<%-url.query.url;%>" alt="加载中">
            </div>
            <div class="col col-sm-3 pl-30">
                <div class="docs-preview clearfix">
                    <div class="img-preview preview-lg"></div>
                    <div class="img-preview preview-md"></div>
                    <div class="img-preview preview-sm"></div>
                    <div class="img-preview preview-xs"></div>
                </div>
                <div class="docs-data">
                    <!-- <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataX">X</label>
                        </span>
                        <input type="text" class="form-control" id="dataX" placeholder="x">
                        <span class="input-group-append">
                        <span class="input-group-text">px</span>
                        </span>
                    </div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataY">Y</label>
                        </span>
                        <input type="text" class="form-control" id="dataY" placeholder="y">
                        <span class="input-group-append">
                        <span class="input-group-text">px</span>
                        </span>
                    </div> -->
                    <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataWidth">Width</label>
                        </span>
                        <input type="text" class="form-control" id="dataWidth" placeholder="width">
                        <span class="input-group-append">
                        <span class="input-group-text">px</span>
                        </span>
                    </div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataHeight">Height</label>
                        </span>
                        <input type="text" class="form-control" id="dataHeight" placeholder="height">
                        <span class="input-group-append">
                        <span class="input-group-text">px</span>
                        </span>
                    </div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataRotate">Rotate</label>
                        </span>
                        <input type="text" class="form-control" id="dataRotate" placeholder="rotate">
                        <span class="input-group-append">
                        <span class="input-group-text">deg</span>
                        </span>
                    </div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataScaleX">ScaleX</label>
                        </span>
                        <input type="text" class="form-control" id="dataScaleX" placeholder="scaleX">
                    </div>
                    <div class="input-group input-group-sm">
                        <span class="input-group-prepend">
                        <label class="input-group-text" for="dataScaleY">ScaleY</label>
                        </span>
                        <input type="text" class="form-control" id="dataScaleY" placeholder="scaleY">
                    </div>
                </div>
            </div>
        </div>
        <div class="row" id="actions">
            <div class="col col-sm-8 pt-10 docs-buttons text-center">
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" data-method="setDragMode" data-option="move" title="Move">
                        <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="" data-original-title="$().cropper(&quot;setDragMode&quot;, &quot;move&quot;)">
                        <span class="fa fa-arrows-alt"></span>
                        </span>
                    </button>
                    <button type="button" class="btn btn-primary" data-method="setDragMode" data-option="crop" title="Crop">
                        <span class="docs-tooltip" data-toggle="tooltip" data-animation="false" title="" data-original-title="$().cropper(&quot;setDragMode&quot;, &quot;crop&quot;)">
                        <span class="fa fa-crop-alt"></span>
                        </span>
                    </button>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" data-method="zoom" data-option="0.1" title="Zoom In">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.zoom(0.1)">
                        <span class="fa fa-search-plus"></span>
                        </span>
                    </button>
                    <button type="button" class="btn btn-primary" data-method="zoom" data-option="-0.1" title="Zoom Out">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.zoom(-0.1)">
                        <span class="fa fa-search-minus"></span>
                        </span>
                    </button>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" data-method="rotate" data-option="-45" title="Rotate Left">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.rotate(-45)">
                        <span class="fa fa-undo-alt"></span>
                        </span>
                    </button>
                    <button type="button" class="btn btn-primary" data-method="rotate" data-option="45" title="Rotate Right">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.rotate(45)">
                        <span class="fa fa-redo-alt"></span>
                        </span>
                    </button>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" data-method="scaleX" data-option="-1" title="Flip Horizontal">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.scaleX(-1)">
                        <span class="fa fa-arrows-alt-h"></span>
                        </span>
                    </button>
                    <button type="button" class="btn btn-primary" data-method="scaleY" data-option="-1" title="Flip Vertical">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.scaleY(-1)">
                        <span class="fa fa-arrows-alt-v"></span>
                        </span>
                    </button>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" data-method="reset" title="Reset">
                        <span class="docs-tooltip" data-toggle="tooltip" title="" data-original-title="cropper.reset()">
                        <span class="fa fa-sync-alt"></span>
                        </span>
                    </button>
                    <button type="button" class="btn btn-primary" data-method="getCroppedCanvas" title="Confirm">
                        <span class="fa fa-check"></span>
                    </button>
                    <button type="button" class="btn btn-primary" id="closeIframe" title="Close">
                        <span class="fa fa-times"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <script src="scripts/jquery.min.js"></script>
    <script src="static/js/plugins/cropper/cropper.min.js"></script>
    <script type="text/javascript">
        window.onload = function () {
            'use strict';

            var Cropper = window.Cropper;
            var URL = window.URL || window.webkitURL;
            var image = document.getElementById('image');
            var download = document.getElementById('download');
            var actions = document.getElementById('actions');
            // var dataX = document.getElementById('dataX');
            // var dataY = document.getElementById('dataY');
            var dataHeight = document.getElementById('dataHeight');
            var dataWidth = document.getElementById('dataWidth');
            var dataRotate = document.getElementById('dataRotate');
            var dataScaleX = document.getElementById('dataScaleX');
            var dataScaleY = document.getElementById('dataScaleY');
            var options = {
                aspectRatio: <%-url.query.width%> / <%-url.query.height%>,
                preview: '.img-preview',
                // cropBoxResizable:false,
                viewMode:0,
                // minCropBoxWidth:800,
                ready: function (e) {
                    console.log(e.type);
                    cropper.setData({width:<%-url.query.width%>,height:<%-url.query.height%>});
                },
                cropstart: function (e) {
                console.log(e.type, e.detail.action);
                },
                cropmove: function (e) {
                console.log(e.type, e.detail.action);
                },
                cropend: function (e) {
                console.log(e.type, e.detail.action);
                },
                crop: function (e) {
                var data = e.detail;

                console.log(e.type);
                // dataX.value = Math.round(data.x);
                // dataY.value = Math.round(data.y);
                dataHeight.value = Math.round(data.height);
                dataWidth.value = Math.round(data.width);
                dataRotate.value = typeof data.rotate !== 'undefined' ? data.rotate : '';
                dataScaleX.value = typeof data.scaleX !== 'undefined' ? data.scaleX : '';
                dataScaleY.value = typeof data.scaleY !== 'undefined' ? data.scaleY : '';
                },
                zoom: function (e) {
                console.log(e.type, e.detail.ratio);
                }
            };
            var cropper = new Cropper(image, options);
            var originalImageURL = image.src;
            var uploadedImageType = 'image/jpeg';
            var uploadedImageName = 'cropped.jpg';
            var uploadedImageURL;

            // Buttons
            if (!document.createElement('canvas').getContext) {
                $('button[data-method="getCroppedCanvas"]').prop('disabled', true);
            }

            if (typeof document.createElement('cropper').style.transition === 'undefined') {
                $('button[data-method="rotate"]').prop('disabled', true);
                $('button[data-method="scale"]').prop('disabled', true);
            }

            // // Download
            // if (typeof download.download === 'undefined') {
            //     download.className += ' disabled';
            //     download.title = 'Your browser does not support download';
            // }

            // // Options
            // actions.querySelector('.docs-toggles').onchange = function (event) {
            //     var e = event || window.event;
            //     var target = e.target || e.srcElement;
            //     var cropBoxData;
            //     var canvasData;
            //     var isCheckbox;
            //     var isRadio;

            //     if (!cropper) {
            //     return;
            //     }

            //     if (target.tagName.toLowerCase() === 'label') {
            //     target = target.querySelector('input');
            //     }

            //     isCheckbox = target.type === 'checkbox';
            //     isRadio = target.type === 'radio';

            //     if (isCheckbox || isRadio) {
            //     if (isCheckbox) {
            //         options[target.name] = target.checked;
            //         cropBoxData = cropper.getCropBoxData();
            //         canvasData = cropper.getCanvasData();

            //         options.ready = function () {
            //         console.log('ready');
            //         cropper.setCropBoxData(cropBoxData).setCanvasData(canvasData);
            //         };
            //     } else {
            //         options[target.name] = target.value;
            //         options.ready = function () {
            //         console.log('ready');
            //         };
            //     }

            //     // Restart
            //     cropper.destroy();
            //     cropper = new Cropper(image, options);
            //     }
            // };

            // Methods
            actions.querySelector('.docs-buttons').onclick = function (event) {
                var e = event || window.event;
                var target = e.target || e.srcElement;
                var cropped;
                var result;
                var input;
                var data;

                if (!cropper) {
                return;
                }

                while (target !== this) {
                if (target.getAttribute('data-method')) {
                    break;
                }

                target = target.parentNode;
                }

                if (target === this || target.disabled || target.className.indexOf('disabled') > -1) {
                return;
                }

                data = {
                method: target.getAttribute('data-method'),
                target: target.getAttribute('data-target'),
                option: target.getAttribute('data-option') || undefined,
                secondOption: target.getAttribute('data-second-option') || undefined
                };

                cropped = cropper.cropped;

                if (data.method) {
                if (typeof data.target !== 'undefined') {
                    input = document.querySelector(data.target);

                    if (!target.hasAttribute('data-option') && data.target && input) {
                    try {
                        data.option = JSON.parse(input.value);
                    } catch (e) {
                        console.log(e.message);
                    }
                    }
                }

                switch (data.method) {
                    case 'rotate':
                    if (cropped && options.viewMode > 0) {
                        cropper.clear();
                    }

                    break;

                    case 'getCroppedCanvas':
                    try {
                        data.option = JSON.parse(data.option);
                    } catch (e) {
                        console.log(e.message);
                    }

                    if (uploadedImageType === 'image/jpeg') {
                        if (!data.option) {
                        data.option = {};
                        }

                        data.option.fillColor = '#fff';
                    }

                    break;
                }

                result = cropper[data.method](data.option, data.secondOption);

                switch (data.method) {
                    case 'rotate':
                    if (cropped && options.viewMode > 0) {
                        cropper.crop();
                    }

                    break;

                    case 'scaleX':
                    case 'scaleY':
                    target.setAttribute('data-option', -data.option);
                    break;

                    case 'getCroppedCanvas':
                    if (result) {
                        console.log(result,uploadedImageType);
                        $.post('/admin/cropper',{
                            imagedata:result.toDataURL(uploadedImageType),
                            imagename:'<%-url.query.url%>'
                        },function(data){
                            if(data!='图片生成失败'){
                                window.parent.cropper.callback(data);
                            }else{
                                alert(data);
                            }
                        });
                        // Bootstrap's Modal
                        // $('#getCroppedCanvasModal').modal().find('.modal-body').html(result);

                        // if (!download.disabled) {
                        // download.download = uploadedImageName;
                        // download.href = result.toDataURL(uploadedImageType);
                        // }
                    }

                    break;

                    case 'destroy':
                    cropper = null;

                    if (uploadedImageURL) {
                        URL.revokeObjectURL(uploadedImageURL);
                        uploadedImageURL = '';
                        image.src = originalImageURL;
                    }

                    break;
                }

                if (typeof result === 'object' && result !== cropper && input) {
                    try {
                    input.value = JSON.stringify(result);
                    } catch (e) {
                    console.log(e.message);
                    }
                }
                }
            };

            document.body.onkeydown = function (event) {
                var e = event || window.event;

                if (e.target !== this || !cropper || this.scrollTop > 300) {
                return;
                }

                switch (e.keyCode) {
                case 37:
                    e.preventDefault();
                    cropper.move(-1, 0);
                    break;

                case 38:
                    e.preventDefault();
                    cropper.move(0, -1);
                    break;

                case 39:
                    e.preventDefault();
                    cropper.move(1, 0);
                    break;

                case 40:
                    e.preventDefault();
                    cropper.move(0, 1);
                    break;
                }
            };

            // // Import image
            // var inputImage = document.getElementById('inputImage');

            // if (URL) {
            //     inputImage.onchange = function () {
            //     var files = this.files;
            //     var file;

            //     if (files && files.length) {
            //         file = files[0];

            //         if (/^image\/\w+/.test(file.type)) {
            //         uploadedImageType = file.type;
            //         uploadedImageName = file.name;

            //         if (uploadedImageURL) {
            //             URL.revokeObjectURL(uploadedImageURL);
            //         }

            //         image.src = uploadedImageURL = URL.createObjectURL(file);

            //         if (cropper) {
            //             cropper.destroy();
            //         }

            //         cropper = new Cropper(image, options);
            //         inputImage.value = null;
            //         } else {
            //         window.alert('Please choose an image file.');
            //         }
            //     }
            //     };
            // } else {
            //     inputImage.disabled = true;
            //     inputImage.parentNode.className += ' disabled';
            // }
        };
        $("#closeIframe").click(function(){
            window.parent.cropper.close();
        });
    </script>
</body>
</html>