/** Declaration file generated by dts-gen */

import type { Database } from '../../../../node_modules/@types/better-sqlite3';

declare class table_class {
    constructor(...args: any[]);

    add(data: { [key: string]: any } | Array<[{ [key: string]: any; }]>): { changes: Number, lastInsertRowid: Number, error?: Error };

    count(condition: string = '', param?: { [key: string]: any }): number;

    /*** 根据id或者id数组或者对象条件删除数据 ***/
    delete(id: number | Array<number> | Array<{ id: number }> | { [key: string]: any } | Array<{ [key: string]: any }>): { changes: Number, lastInsertRowid: Number };

    /*** 示例 app.tables.table1.get(1);app.tables.table1.get({id:1});app.tables.table1.get([{id:1,name:'李明'}],['id>10','id desc','limit 0,10'],true,true) ***/
    get(IdArr: string | number | { [key: string]: any } | Array<[{ [key: string]: any }]>, orderByLimitArr: [any] = [], isAndIdArr: boolean = true, isAndOrderByLimitArr: boolean = true): Array<[{ [key: string]: any; }]>;

    /*** 返回表里的所有记录 ***/
    getAll(): Array<[{ [key: string]: any; }]>;

    /*** condition查询条件,只是查询 ***/
    query(condition: string, param?: { [key: string]: any }): Array<[{ [key: string]: any; }]>;

    /*** app.tables.table1.update({id:20,name:"test"})
     * update更新数据,如果无conditionString更新条件，则updateDataArr上传的对象或者数组里的对象里必须有属性id，语句根据id更新数据表 
     * ***/
    update(
        data: { [key: string]: any } | Array<{ [key: string]: any }> | Array<{ id: any } & { [key: string]: any }>,
        conditionString: string = ''
    ): {
        changes: number;
        lastInsertRowid: number;
        error?: Error;
    };
    info: Array<{ [key: string]: any }>;
    /*** 当前数据表的名字 ***/
    name: string;
    db: Database;
}
export = table_class;
