

2025-04-08 14:14:27
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at Object.schedule (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at runSchedule (E:\web\fet_web_app\core\app_init\schedule.js:18:90)
    at Job.job (E:\web\fet_web_app\core\app_init\schedule.js:71:9)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at AsyncFunction.schedules (E:\web\fet_web_app\core\app_init\schedule.js:73:19)
    at Function.r.use (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\output\childprocess\httpServices.js:4:4936)
    at AsyncFunction.<anonymous> (E:\web\fet_web_app\core\app_init\index.js:247:15)

2025-04-08 14:14:28
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:29
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:30
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:31
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:32
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:33
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:34
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:35
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:36
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:37
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:38
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:39
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:40
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:41
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:42
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:43
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:44
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:45
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:46
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:47
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:48
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:49
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:50
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:51
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:14:52
未处理的 Promise 拒绝:
{}
TypeError: path.name is not a function
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:12:38)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:25:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:17:55
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at Object.schedule (E:\web\fet_web_app\schedules\app_tables_auto_update.js:29:13)
    at runSchedule (E:\web\fet_web_app\core\app_init\schedule.js:18:90)
    at Job.job (E:\web\fet_web_app\core\app_init\schedule.js:71:9)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at AsyncFunction.schedules (E:\web\fet_web_app\core\app_init\schedule.js:73:19)
    at Function.r.use (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\output\childprocess\httpServices.js:4:4936)

2025-04-08 14:17:56
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:17:57
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:17:58
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:17:59
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:00
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:01
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:02
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:03
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:04
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:05
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:06
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:07
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:08
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:09
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:10
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:11
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:12
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:13
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:14
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:15
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:16
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:17
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:18
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:19
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:20
未处理的 Promise 拒绝:
{}
TypeError: Property description must be an object: undefined
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:27:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:35
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:36
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:37
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:38
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:39
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:40
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:41
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:42
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:43
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:44
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:45
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:46
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:47
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:48
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:49
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:50
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:51
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:52
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:53
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:54
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:55
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:56
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:57
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:58
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:18:59
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:19:00
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 14:19:01
未处理的 Promise 拒绝:
{}
TypeError: Cannot redefine property: akshare
    at Function.defineProperty (<anonymous>)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:14:32)
    at Job.job (E:\web\fet_web_app\schedules\app_tables_auto_update.js:31:13)
    at Job.invoke (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Job.js:171:15)
    at C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:268:28
    at Timeout._onTimeout (C:\Users\Administrator\Desktop\fet-win32-x64\resources\app.asar\node_modules\node-schedule\lib\Invocation.js:228:7)
    at listOnTimeout (node:internal/timers:573:17)
    at processTimers (node:internal/timers:514:7)

2025-04-08 15:55:17
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

2025-04-08 15:55:18
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)
    at runNextTicks (node:internal/process/task_queues:60:5)
    at listOnTimeout (node:internal/timers:540:9)
    at processTimers (node:internal/timers:514:7)

2025-04-08 15:55:19
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:20
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:21
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:22
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:23
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:24
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:25
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:26
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:27
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:32
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)

2025-04-08 15:55:33
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:34
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:35
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:36
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:37
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:38
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:39
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:40
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:41
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:42
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:43
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:44
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:45
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:46
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:55:51
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:56:26
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:56:27
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:56:28
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:56:28
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:56:29
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:57:09
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)
    at runNextTicks (node:internal/process/task_queues:60:5)
    at processTimers (node:internal/timers:511:9)

2025-04-08 15:57:10
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)

2025-04-08 15:57:13
未处理的 Promise 拒绝:
{"errno":-4058,"code":"ENOENT","syscall":"open","path":"E:\\web\\fet_web_app\\\n            import { ServerResponse, IncomingMessage } from \"http\";\n            import type { Database } from '.\\node_modules\\@types\\better-sqlite3';\n            import type * as table_class from '.\\core\\app_init\\db\\sqlite\\table_class';\n            declare global {\n                interface Context {\n                    req: IncomingMessage;\n                    reqAddress: string;\n                    res: ServerResponse;\n                    url: Url;\n                    use: (fun: useMethod) => void;\n                    runtime?: number;\n                    [key: string]: any;\n                }\n                interface App {\n                    action: any;\n                    config: {\n                        path?: string;\n                        port?: string;\n                        url?: string;\n                        \\** 静态目录 相对于\\view\\目录 *\\\n                        staticPath?: Array[string];\n                        \\** 当遇到\\时，如果没有对应action时，默认加载的页面，默认index.html *\\\n                        defaultPage?: Array[string];\n\n                    };\n                    decode: (string: string) => string;\n                    decodeURIComponentSafe: (string: string) => string;\n                    deepClone: (target: any) => any;\n                    deepMerge: (target: any, source: any) => any;\n                    encode: (string: string) => string;\n                    encodeURIComponentSafe: (string: string) => string;\n                    \\** 输入小于10的数字，比如输入1返回01，输入9返回09 *\\\n                    fileZero: (number: number) => number;\n                    getNowTime: () => {\n                        \\** 年-月-日 时-分-秒 *\\\n                        full: string;\n                        \\** 年-月-日 *\\\n                        date: string;\n                        \\** 时:分:秒 *\\\n                        time: string;\n                        \\** 时间戳 *\\\n                        number: number;\n                    },\n                    getRemoteIp: Promise<any>;\n                    \\** 处理http请求的中间件的路径 *\\\n                    httpHandlerPath: string;\n                    lib: Array;\n                    LRU: any;\n                    LRU_HREF_PAGE: any;\n                    print: () => void;\n                    printAll: () => void;\n                    require: ( \\** 模块路径 *\\ modulePath: any, \\** 是否动态加载,默认否 *\\ dynamic?: boolean) => any;\n                    \\** 已经加载了的模块 *\\\n                    requireModules: any;\n                    \\** 所有定时任务 *\\\n                    schedules: any;\n                    server: any;\n                    \\** 服务器路径 *\\\n                    serverPath: string;\n                    sqlite: fetSqlite;\n                    tables: {\n                        sqlite_sequence:table\n                            realname_auth:table\n                            session:table\n                            _uni_id_users_old_20230831:table\n                            signin_records:table\n                            webinfo:table\n                            zhaopin:table\n                            banner:table\n                            bill:table\n                            clientssay:table\n                            contact:table\n                            cropper:table\n                            files:table\n                            friendlink:table\n                            image:table\n                            message:table\n                            _news_articles_old_20241221:table\n                            pages:table\n                            tag:table\n                            tag_relationship:table\n                            _domain_old_20230805:table\n                            news_categories:table\n                            _theme_old_20240207:table\n                            domain:table\n                            uni_id_users:table\n                            theme:table\n                            news_articles:table\n                            \n                        [key: string]: table;\n                    };\n                    utils: {\n                        enterprise: Enterprise;\n                        [key: string]: any\n                    }\n                    [key: string]: any;\n                }\n                interface fetSqlite extends Database {\n                    \\*** 数据库名字或者better-sqlite3配置项options ***\\\n                    DB:{\n                        (dbname?: string | { [key: string]: any }): fetSqlite;\n                        akshare : {sqlite_sequence:table\n                        stock_info_a_code_name:table\n                        hist_daily:table\n                        hist_lastday:table\n                        }\n                    default : {sqlite_sequence:table\n                        realname_auth:table\n                        message:table\n                        _news_articles_old_20241221:table\n                        pages:table\n                        tag:table\n                        tag_relationship:table\n                        _domain_old_20230805:table\n                        news_categories:table\n                        _theme_old_20240207:table\n                        domain:table\n                        uni_id_users:table\n                        theme:table\n                        news_articles:table\n                        }\n                    douyin : {_douyin_old_20250321:table\n                        _douyin_old_20250321_1:table\n                        sqlite_sequence:table\n                        douyin:table\n                        _douyin1_old_20250325:table\n                        douyin1:table\n                        _douyin2_old_20250326:table\n                        _douyin2_old_20250326_1:table\n                        _douyin2_old_20250326_2:table\n                        douyin2:table\n                        }\n                    test : {_users_old_20241022:table\n                        _users_old_20250322:table\n                        users:table\n                        }\n                    \n                        \\ 动态添加属性\n                    };\n                    dbEntry: { [key: string]: fetSqlite };\n                    [key: string]: fetSqlite;\n                }\n                interface Url {\n                    auth?: string | null;\n                    hash?: string | null;\n                    host?: string | null;\n                    hostname: string;\n                    href: string;\n                    parse: (urlString: string) => Url;\n                    path: string;\n                    pathname: string;\n                    port: string;\n                    protocol: string;\n                    query: Object | any;\n                    search?: string | null;\n                    slashes: boolean;\n                    toString: () => string;\n                }\n                interface useMethod {\n                    (context: Context, app: StatsFs): void;\n                }\n                \\** better-sqlite3 table *\\\n                interface table extends table_class {\n                    \\ get:()=>any;\n                }\n                interface Enterprise {\n                    constructor(...args: any[]);\n\n                    banner_add(...args: any[]): void;\n\n                    banner_get(...args: any[]): void;\n\n                    banner_list(...args: any[]): void;\n\n                    banner_update(...args: any[]): void;\n\n                    category_delete(...args: any[]): void;\n\n                    category_list(...args: any[]): void;\n\n                    clientssay_list(...args: any[]): void;\n\n                    contact_delete(...args: any[]): void;\n\n                    contact_list(...args: any[]): void;\n\n                    contact_list_server(...args: any[]): void;\n\n                    contact_readed(...args: any[]): void;\n\n                    context_add(...args: any[]): void;\n\n                    domain_list(...args: any[]): void;\n\n                    friendlink_list(...args: any[]): void;\n\n                    friendlink_list_server(...args: any[]): void;\n\n                    getContactlength(...args: any[]): void;\n\n                    get_domain_id(...args: any[]): void;\n\n                    image_add(...args: any[]): void;\n\n                    image_get(...args: any[]): void;\n\n                    image_list(...args: any[]): void;\n\n                    image_list_server(...args: any[]): void;\n\n                    image_modify(...args: any[]): void;\n\n                    isAdmin(...args: any[]): void;\n\n                    isLogin(...args: any[]): void;\n\n                    message_delete(...args: any[]): void;\n\n                    message_list(...args: any[]): void;\n\n                    message_readed(...args: any[]): void;\n\n                    news_articles_add(...args: any[]): void;\n\n                    news_articles_get(...args: any[]): void;\n\n                    news_articles_list(...args: any[]): void;\n\n                    news_articles_list_server(...args: any[]): void;\n\n                    news_articles_update(...args: any[]): void;\n\n                    news_categories_child(...args: any[]): void;\n\n                    news_categories_familytree(...args: any[]): void;\n\n                    news_categories_son(...args: any[]): void;\n\n                    news_categories_tag(...args: any[]): void;\n\n                    page_add(...args: any[]): void;\n\n                    page_get(...args: any[]): void;\n\n                    page_update(...args: any[]): void;\n\n                    pagesList(...args: any[]): void;\n\n                    recommend_user_all(...args: any[]): void;\n\n                    signout(...args: any[]): void;\n\n                    tag(...args: any[]): void;\n\n                    tag_list(...args: any[]): void;\n\n                    theme_list(...args: any[]): void;\n\n                    webinfo(...args: any[]): void;\n\n                    zhaopin_list(...args: any[]): void;\n\n                    zhaopin_list_server(...args: any[]): void;\n\n                }\n            }\n            "}
Error: ENOENT: no such file or directory, open 'E:\web\fet_web_app\
            import { ServerResponse, IncomingMessage } from "http";
            import type { Database } from '.\node_modules\@types\better-sqlite3';
            import type * as table_class from '.\core\app_init\db\sqlite\table_class';
            declare global {
                interface Context {
                    req: IncomingMessage;
                    reqAddress: string;
                    res: ServerResponse;
                    url: Url;
                    use: (fun: useMethod) => void;
                    runtime?: number;
                    [key: string]: any;
                }
                interface App {
                    action: any;
                    config: {
                        path?: string;
                        port?: string;
                        url?: string;
                        \** 静态目录 相对于\view\目录 *\
                        staticPath?: Array[string];
                        \** 当遇到\时，如果没有对应action时，默认加载的页面，默认index.html *\
                        defaultPage?: Array[string];

                    };
                    decode: (string: string) => string;
                    decodeURIComponentSafe: (string: string) => string;
                    deepClone: (target: any) => any;
                    deepMerge: (target: any, source: any) => any;
                    encode: (string: string) => string;
                    encodeURIComponentSafe: (string: string) => string;
                    \** 输入小于10的数字，比如输入1返回01，输入9返回09 *\
                    fileZero: (number: number) => number;
                    getNowTime: () => {
                        \** 年-月-日 时-分-秒 *\
                        full: string;
                        \** 年-月-日 *\
                        date: string;
                        \** 时:分:秒 *\
                        time: string;
                        \** 时间戳 *\
                        number: number;
                    },
                    getRemoteIp: Promise<any>;
                    \** 处理http请求的中间件的路径 *\
                    httpHandlerPath: string;
                    lib: Array;
                    LRU: any;
                    LRU_HREF_PAGE: any;
                    print: () => void;
                    printAll: () => void;
                    require: ( \** 模块路径 *\ modulePath: any, \** 是否动态加载,默认否 *\ dynamic?: boolean) => any;
                    \** 已经加载了的模块 *\
                    requireModules: any;
                    \** 所有定时任务 *\
                    schedules: any;
                    server: any;
                    \** 服务器路径 *\
                    serverPath: string;
                    sqlite: fetSqlite;
                    tables: {
                        sqlite_sequence:table
                            realname_auth:table
                            session:table
                            _uni_id_users_old_20230831:table
                            signin_records:table
                            webinfo:table
                            zhaopin:table
                            banner:table
                            bill:table
                            clientssay:table
                            contact:table
                            cropper:table
                            files:table
                            friendlink:table
                            image:table
                            message:table
                            _news_articles_old_20241221:table
                            pages:table
                            tag:table
                            tag_relationship:table
                            _domain_old_20230805:table
                            news_categories:table
                            _theme_old_20240207:table
                            domain:table
                            uni_id_users:table
                            theme:table
                            news_articles:table
                            
                        [key: string]: table;
                    };
                    utils: {
                        enterprise: Enterprise;
                        [key: string]: any
                    }
                    [key: string]: any;
                }
                interface fetSqlite extends Database {
                    \*** 数据库名字或者better-sqlite3配置项options ***\
                    DB:{
                        (dbname?: string | { [key: string]: any }): fetSqlite;
                        akshare : {sqlite_sequence:table
                        stock_info_a_code_name:table
                        hist_daily:table
                        hist_lastday:table
                        }
                    default : {sqlite_sequence:table
                        realname_auth:table
                        message:table
                        _news_articles_old_20241221:table
                        pages:table
                        tag:table
                        tag_relationship:table
                        _domain_old_20230805:table
                        news_categories:table
                        _theme_old_20240207:table
                        domain:table
                        uni_id_users:table
                        theme:table
                        news_articles:table
                        }
                    douyin : {_douyin_old_20250321:table
                        _douyin_old_20250321_1:table
                        sqlite_sequence:table
                        douyin:table
                        _douyin1_old_20250325:table
                        douyin1:table
                        _douyin2_old_20250326:table
                        _douyin2_old_20250326_1:table
                        _douyin2_old_20250326_2:table
                        douyin2:table
                        }
                    test : {_users_old_20241022:table
                        _users_old_20250322:table
                        users:table
                        }
                    
                        \ 动态添加属性
                    };
                    dbEntry: { [key: string]: fetSqlite };
                    [key: string]: fetSqlite;
                }
                interface Url {
                    auth?: string | null;
                    hash?: string | null;
                    host?: string | null;
                    hostname: string;
                    href: string;
                    parse: (urlString: string) => Url;
                    path: string;
                    pathname: string;
                    port: string;
                    protocol: string;
                    query: Object | any;
                    search?: string | null;
                    slashes: boolean;
                    toString: () => string;
                }
                interface useMethod {
                    (context: Context, app: StatsFs): void;
                }
                \** better-sqlite3 table *\
                interface table extends table_class {
                    \ get:()=>any;
                }
                interface Enterprise {
                    constructor(...args: any[]);

                    banner_add(...args: any[]): void;

                    banner_get(...args: any[]): void;

                    banner_list(...args: any[]): void;

                    banner_update(...args: any[]): void;

                    category_delete(...args: any[]): void;

                    category_list(...args: any[]): void;

                    clientssay_list(...args: any[]): void;

                    contact_delete(...args: any[]): void;

                    contact_list(...args: any[]): void;

                    contact_list_server(...args: any[]): void;

                    contact_readed(...args: any[]): void;

                    context_add(...args: any[]): void;

                    domain_list(...args: any[]): void;

                    friendlink_list(...args: any[]): void;

                    friendlink_list_server(...args: any[]): void;

                    getContactlength(...args: any[]): void;

                    get_domain_id(...args: any[]): void;

                    image_add(...args: any[]): void;

                    image_get(...args: any[]): void;

                    image_list(...args: any[]): void;

                    image_list_server(...args: any[]): void;

                    image_modify(...args: any[]): void;

                    isAdmin(...args: any[]): void;

                    isLogin(...args: any[]): void;

                    message_delete(...args: any[]): void;

                    message_list(...args: any[]): void;

                    message_readed(...args: any[]): void;

                    news_articles_add(...args: any[]): void;

                    news_articles_get(...args: any[]): void;

                    news_articles_list(...args: any[]): void;

                    news_articles_list_server(...args: any[]): void;

                    news_articles_update(...args: any[]): void;

                    news_categories_child(...args: any[]): void;

                    news_categories_familytree(...args: any[]): void;

                    news_categories_son(...args: any[]): void;

                    news_categories_tag(...args: any[]): void;

                    page_add(...args: any[]): void;

                    page_get(...args: any[]): void;

                    page_update(...args: any[]): void;

                    pagesList(...args: any[]): void;

                    recommend_user_all(...args: any[]): void;

                    signout(...args: any[]): void;

                    tag(...args: any[]): void;

                    tag_list(...args: any[]): void;

                    theme_list(...args: any[]): void;

                    webinfo(...args: any[]): void;

                    zhaopin_list(...args: any[]): void;

                    zhaopin_list_server(...args: any[]): void;

                }
            }
            '
    at Object.open (node:internal/fs/sync:78:18)
    at Object.openSync (node:fs:565:17)
    at Object.func [as openSync] (node:electron/js2c/node_init:2:2214)
    at Object.writeFileSync (node:fs:2288:35)
    at updateTables (E:\web\fet_web_app\schedules\app_tables_auto_update.js:255:20)